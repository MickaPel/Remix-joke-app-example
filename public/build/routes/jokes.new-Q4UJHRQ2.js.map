{
  "version": 3,
  "sources": ["../../../app/routes/jokes.new.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\jokes.new.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\jokes.new.tsx\");\n  import.meta.hot.lastModified = \"1694687073104.7283\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { db } from \"~/utils/db.server\";\nimport { Form, Link, isRouteErrorResponse, useActionData, useRouteError } from \"@remix-run/react\";\nimport { badRequest } from \"~/utils/request.server\";\nimport { getUserId, requireUserId } from \"~/utils/session.server\";\nexport const loader = async ({\n  request\n}) => {\n  const userId = await getUserId(request);\n  if (!userId) {\n    throw new Response(\"Unauthorized\", {\n      status: 401\n    });\n  }\n  return json({});\n};\nfunction validateJokeContent(content) {\n  if (content.length < 10) {\n    return \"That joke is too short\";\n  }\n}\nfunction validateJokeName(name) {\n  if (name.length < 3) {\n    return \"That joke's name is too short\";\n  }\n}\nexport const action = async ({\n  request\n}) => {\n  const form = await request.formData();\n  const content = form.get('content');\n  const name = form.get('name');\n  const userId = await requireUserId(request);\n  if (typeof content !== 'string' || typeof name !== 'string') {\n    // throw new Error(\"Form incorect\");\n    return badRequest({\n      fieldErrors: null,\n      fields: null,\n      formError: \"Form not submitted correctly.\"\n    });\n  }\n  const fieldErrors = {\n    content: validateJokeContent(content),\n    name: validateJokeName(name)\n  };\n  const fields = {\n    content,\n    name\n  };\n  if (Object.values(fieldErrors).some(Boolean)) {\n    return badRequest({\n      fieldErrors,\n      fields,\n      formError: null\n    });\n  }\n  const joke = await db.joke.create({\n    data: {\n      ...fields,\n      jokesterId: userId\n    }\n  });\n  return redirect(`/jokes/${joke.id}`);\n};\nexport default function AddJoke() {\n  _s();\n  const actionData = useActionData();\n  return <div>\r\n            <p>Add your own hilarious joke</p>\r\n            <Form method=\"post\">\r\n                <div>\r\n                    <label>\r\n                        Name: \r\n                        <input defaultValue={actionData?.fields?.name} type=\"text\" name=\"name\" aria-invalid={Boolean(actionData?.fieldErrors?.name)} aria-errormessage={actionData?.fieldErrors?.name ? \"name-error\" : undefined} />\r\n                    </label>\r\n                    {actionData?.fieldErrors?.name ? <p className=\"form-validation-error\" id=\"name-error\" role=\"alert\">\r\n                        {actionData.fieldErrors.name}\r\n                        </p> : null}\r\n                </div>\r\n                <div>\r\n                    <label>\r\n                        Content: \r\n                        <textarea name=\"content\" defaultValue={actionData?.fields?.content} aria-invalid={Boolean(actionData?.fieldErrors?.content)} aria-errormessage={actionData?.fieldErrors?.content ? \"content-error\" : undefined} />\r\n                    </label>\r\n                    {actionData?.fieldErrors?.content ? <p className=\"form-validation-error\" id=\"content-error\" role=\"alert\">\r\n                        {actionData.fieldErrors.content}\r\n                        </p> : null}\r\n                </div>\r\n                <div>\r\n                    {actionData?.formError ? <p className=\"form-validation-error\" role=\"alert\">\r\n                            {actionData.formError}\r\n                        </p> : null}\r\n                    <button type=\"submit\" className=\"button\">\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </Form>            \r\n        </div>;\n}\n_s(AddJoke, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = AddJoke;\nexport function ErrorBoundary() {\n  _s2();\n  const error = useRouteError();\n  if (isRouteErrorResponse(error) && error.status === 401) {\n    return <div className=\"error-container\">\r\n              <p>You must be logged in to create a joke.</p>\r\n              <Link to=\"/login\">Login</Link>\r\n            </div>;\n  }\n  return <div className=\"error-container\">\r\n        Something unexpected went wrong. Sorry about that.\r\n      </div>;\n}\n_s2(ErrorBoundary, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c2 = ErrorBoundary;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddJoke\");\n$RefreshReg$(_c2, \"ErrorBoundary\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["_c"]
}
